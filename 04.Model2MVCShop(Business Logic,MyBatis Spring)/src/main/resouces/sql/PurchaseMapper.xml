<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
 	
	<resultMap id="purchaseSelectMap" type="purchase">
		<result property="tranNo" 				column="tran_no" 			jdbcType="NUMERIC"/>
		<association property="buyer" 			column="buyer_id" 			jdbcType="User"		
		resultMap="sql/userSelectMap">
		</association>
		<association property="purchaseProd"	column="prod_no" 			jdbcType="Product" 	
		resultMap="sql/productSelectMap">	
		</association> 		
		<result property="divyAddr" 			column="dlvy_addr" 			jdbcType="VARCHAR" />
		<result property="divyDate" 			column="dlvy_date" 			jdbcType="DATE" />
		<result property="divyRequest" 			column="dlvy_request" 		jdbcType="VARCHAR" />
		<result property="orderDate" 			column="order_date" 		jdbcType="DATE" />
		<result property="paymentOption" 		column="payment_option" 	jdbcType="VARCHAR" />
		<result property="receiverName" 		column="receiver_name" 		jdbcType="VARCHAR" />
		<result property="receiverPhone" 		column="receiver_phone" 	jdbcType="VARCHAR" />
		<result property="tranCode" 			column="tran_status_code" 	jdbcType="CHAR" />
	</resultMap>

	 
	
	<!-- SQL : INSERT -->
	<insert 	id="addPurchase"		parameterType="purchase" >
	 	INSERT 
		INTO TRANSACTION 
		VALUES (seq_transaction_prod_no.NEXTVAL, #{purchaseProd.prodNo}, #{buyer.userId}, #{paymentOption}, #{receiverName}, 
							#{receiverPhone}, #{divyAddr}, #{divyRequest},1,SYSDATE,TO_DATE(#{divyDate},'YYYY-MM-DD'))
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getPurchase"	parameterType="int"	resultMap="purchaseSelectMap">
		SELECT * FROM TRANSACTION 
		WHERE TRAN_NO = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updatePurchase"	parameterType="purchase" >
	   	UPDATE TRANSACTION 
	   	<set>
	   		PAYMENT_OPTION = #{paymentOption}, 
			RECEIVER_NAME = #{receiverName}, 
			RECEIVER_PHONE = #{receiverPhone}, 
			DLVY_ADDR =	#{divyAddr}, 
			DLVY_REQUEST = #{divyRequest}, 
			DLVY_DATE = #{divyDate}
			 
	   	</set>
	   	WHERE TRAN_NO = #{tranNo}
	 </update>
	 
	
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getPurchaseList"  parameterType="Map"	resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT * 
											FROM TRANSACTION 
											<if test="#{search.searchCondition} != null">
												<where>
													BUYER_ID = #{buyerId} 
												</where>
												ORDER BY TRAN_NO
											</if>
											 ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 
	 <select  id="getSalesList"  parameterType="Map" 	resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT * 
											FROM TRANSACTION 
												<where>
													BUYER_ID = #{buyerId} 
												</where>
												ORDER BY TRAN_NO
											
											 ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 
	 <update	id="updateTranCode"	parameterType="purchase" >
	   	UPDATE TRANSACTION 
	   	<set>
	   		TRAN_STATUS_CODE=#{tranCode} 
	   	</set>
	   	WHERE TRAN_NO = #{tranNo}
	 </update>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*) FROM(	SELECT * FROM PRODUCT 
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
					 				PROD_NO LIKE '%' || #{searchKeyword} || '%' 
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
					 				PROD_NAME LIKE '%' || #{searchKeyword} || '%' 
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
					 				PRICE LIKE '%' || #{searchKeyword} || '%' 
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
</mapper>